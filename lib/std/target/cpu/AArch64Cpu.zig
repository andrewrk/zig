const feature = @import("std").target.feature;
const CpuInfo = @import("std").target.cpu.CpuInfo;

pub const AArch64Cpu = enum {
    AppleLatest,
    CortexA35,
    CortexA53,
    CortexA55,
    CortexA57,
    CortexA65,
    CortexA65ae,
    CortexA72,
    CortexA73,
    CortexA75,
    CortexA76,
    CortexA76ae,
    Cyclone,
    ExynosM1,
    ExynosM2,
    ExynosM3,
    ExynosM4,
    ExynosM5,
    Falkor,
    Generic,
    Kryo,
    NeoverseE1,
    NeoverseN1,
    Saphira,
    Thunderx,
    Thunderx2t99,
    Thunderxt81,
    Thunderxt83,
    Thunderxt88,
    Tsv110,

    pub fn getInfo(self: @This()) CpuInfo {
        return cpu_infos[@enumToInt(self)];
    }

    pub const FeatureType = feature.AArch64Feature;

    const cpu_infos = [@memberCount(@This())]CpuInfo(@This()) {
        CpuInfo(@This()).create(.AppleLatest, "apple-latest", &[_]FeatureType {
            .ZczFp,
            .ArithCbzFusion,
            .FuseAes,
            .AlternateSextloadCvtF32Pattern,
            .ZczFpWorkaround,
            .FpArmv8,
            .Perfmon,
            .DisableLatencySchedHeuristic,
            .Zcm,
            .ZczGp,
            .ArithBccFusion,
            .FuseCryptoEor,
            .Cyclone,
        },
        CpuInfo(@This()).create(.CortexA35, "cortex-a35", &[_]FeatureType {
            .Perfmon,
            .FpArmv8,
            .Crc,
            .A35,
        },
        CpuInfo(@This()).create(.CortexA53, "cortex-a53", &[_]FeatureType {
            .UseAa,
            .FuseAes,
            .FpArmv8,
            .Perfmon,
            .Crc,
            .BalanceFpOps,
            .UsePostraScheduler,
            .CustomCheapAsMove,
            .A53,
        },
        CpuInfo(@This()).create(.CortexA55, "cortex-a55", &[_]FeatureType {
            .Rcpc,
            .Ccpp,
            .Pan,
            .Rdm,
            .FuseAes,
            .Perfmon,
            .FpArmv8,
            .Lse,
            .Crc,
            .Dotprod,
            .Lor,
            .Uaops,
            .Vh,
            .Ras,
            .A55,
        },
        CpuInfo(@This()).create(.CortexA57, "cortex-a57", &[_]FeatureType {
            .FuseLiterals,
            .FuseAes,
            .FpArmv8,
            .Perfmon,
            .Crc,
            .BalanceFpOps,
            .UsePostraScheduler,
            .CustomCheapAsMove,
            .PredictableSelectExpensive,
            .A57,
        },
        CpuInfo(@This()).create(.CortexA65, "cortex-a65", &[_]FeatureType {
            .Rcpc,
            .Ccpp,
            .Pan,
            .Rdm,
            .FpArmv8,
            .Lse,
            .Crc,
            .Dotprod,
            .Lor,
            .Ssbs,
            .Uaops,
            .Vh,
            .Ras,
            .A65,
        },
        CpuInfo(@This()).create(.CortexA65ae, "cortex-a65ae", &[_]FeatureType {
            .Rcpc,
            .Ccpp,
            .Pan,
            .Rdm,
            .FpArmv8,
            .Lse,
            .Crc,
            .Dotprod,
            .Lor,
            .Ssbs,
            .Uaops,
            .Vh,
            .Ras,
            .A65,
        },
        CpuInfo(@This()).create(.CortexA72, "cortex-a72", &[_]FeatureType {
            .Perfmon,
            .FuseAes,
            .FpArmv8,
            .Crc,
            .A72,
        },
        CpuInfo(@This()).create(.CortexA73, "cortex-a73", &[_]FeatureType {
            .Perfmon,
            .FuseAes,
            .FpArmv8,
            .Crc,
            .A73,
        },
        CpuInfo(@This()).create(.CortexA75, "cortex-a75", &[_]FeatureType {
            .Rcpc,
            .Ccpp,
            .Pan,
            .Rdm,
            .FuseAes,
            .Perfmon,
            .FpArmv8,
            .Lse,
            .Crc,
            .Dotprod,
            .Lor,
            .Uaops,
            .Vh,
            .Ras,
            .A75,
        },
        CpuInfo(@This()).create(.CortexA76, "cortex-a76", &[_]FeatureType {
            .Rcpc,
            .Ccpp,
            .Pan,
            .Rdm,
            .FpArmv8,
            .Lse,
            .Crc,
            .Dotprod,
            .Lor,
            .Ssbs,
            .Uaops,
            .Vh,
            .Ras,
            .A76,
        },
        CpuInfo(@This()).create(.CortexA76ae, "cortex-a76ae", &[_]FeatureType {
            .Rcpc,
            .Ccpp,
            .Pan,
            .Rdm,
            .FpArmv8,
            .Lse,
            .Crc,
            .Dotprod,
            .Lor,
            .Ssbs,
            .Uaops,
            .Vh,
            .Ras,
            .A76,
        },
        CpuInfo(@This()).create(.Cyclone, "cyclone", &[_]FeatureType {
            .ZczFp,
            .ArithCbzFusion,
            .FuseAes,
            .AlternateSextloadCvtF32Pattern,
            .ZczFpWorkaround,
            .FpArmv8,
            .Perfmon,
            .DisableLatencySchedHeuristic,
            .Zcm,
            .ZczGp,
            .ArithBccFusion,
            .FuseCryptoEor,
            .Cyclone,
        },
        CpuInfo(@This()).create(.ExynosM1, "exynos-m1", &[_]FeatureType {
            .ZczFp,
            .FuseAes,
            .SlowPaired128,
            .Force32bitJumpTables,
            .UseReciprocalSquareRoot,
            .FpArmv8,
            .Perfmon,
            .SlowMisaligned128store,
            .Crc,
            .UsePostraScheduler,
            .CustomCheapAsMove,
            .Exynosm1,
        },
        CpuInfo(@This()).create(.ExynosM2, "exynos-m2", &[_]FeatureType {
            .ZczFp,
            .FuseAes,
            .SlowPaired128,
            .Force32bitJumpTables,
            .FpArmv8,
            .Perfmon,
            .SlowMisaligned128store,
            .Crc,
            .UsePostraScheduler,
            .CustomCheapAsMove,
            .Exynosm2,
        },
        CpuInfo(@This()).create(.ExynosM3, "exynos-m3", &[_]FeatureType {
            .ZczFp,
            .FuseLiterals,
            .FuseAes,
            .Force32bitJumpTables,
            .FpArmv8,
            .Perfmon,
            .Crc,
            .LslFast,
            .FuseAddress,
            .UsePostraScheduler,
            .CustomCheapAsMove,
            .PredictableSelectExpensive,
            .FuseCsel,
            .Exynosm3,
        },
        CpuInfo(@This()).create(.ExynosM4, "exynos-m4", &[_]FeatureType {
            .ZczFp,
            .Lse,
            .FuseArithLogic,
            .Lor,
            .UsePostraScheduler,
            .Uaops,
            .CustomCheapAsMove,
            .ArithBccFusion,
            .Ccpp,
            .Perfmon,
            .Pan,
            .Rdm,
            .FuseLiterals,
            .Force32bitJumpTables,
            .LslFast,
            .FuseAddress,
            .ZczGp,
            .Ras,
            .FuseCsel,
            .ArithCbzFusion,
            .FuseAes,
            .FpArmv8,
            .Crc,
            .Dotprod,
            .Vh,
            .Exynosm4,
        },
        CpuInfo(@This()).create(.ExynosM5, "exynos-m5", &[_]FeatureType {
            .ZczFp,
            .Lse,
            .FuseArithLogic,
            .Lor,
            .UsePostraScheduler,
            .Uaops,
            .CustomCheapAsMove,
            .ArithBccFusion,
            .Ccpp,
            .Perfmon,
            .Pan,
            .Rdm,
            .FuseLiterals,
            .Force32bitJumpTables,
            .LslFast,
            .FuseAddress,
            .ZczGp,
            .Ras,
            .FuseCsel,
            .ArithCbzFusion,
            .FuseAes,
            .FpArmv8,
            .Crc,
            .Dotprod,
            .Vh,
            .Exynosm4,
        },
        CpuInfo(@This()).create(.Falkor, "falkor", &[_]FeatureType {
            .ZczFp,
            .Rdm,
            .SlowStrqroStore,
            .Perfmon,
            .FpArmv8,
            .Crc,
            .LslFast,
            .UsePostraScheduler,
            .ZczGp,
            .CustomCheapAsMove,
            .PredictableSelectExpensive,
            .Falkor,
        },
        CpuInfo(@This()).create(.Generic, "generic", &[_]FeatureType {
            .Trbe,
            .Ete,
            .FpArmv8,
            .FuseAes,
            .Neon,
            .Perfmon,
            .UsePostraScheduler,
        },
        CpuInfo(@This()).create(.Kryo, "kryo", &[_]FeatureType {
            .ZczFp,
            .Perfmon,
            .FpArmv8,
            .Crc,
            .LslFast,
            .UsePostraScheduler,
            .ZczGp,
            .CustomCheapAsMove,
            .PredictableSelectExpensive,
            .Kryo,
        },
        CpuInfo(@This()).create(.NeoverseE1, "neoverse-e1", &[_]FeatureType {
            .Rcpc,
            .Ccpp,
            .Pan,
            .Rdm,
            .FpArmv8,
            .Lse,
            .Crc,
            .Dotprod,
            .Lor,
            .Ssbs,
            .Uaops,
            .Vh,
            .Ras,
            .Neoversee1,
        },
        CpuInfo(@This()).create(.NeoverseN1, "neoverse-n1", &[_]FeatureType {
            .Rcpc,
            .Spe,
            .Ccpp,
            .Pan,
            .Rdm,
            .FpArmv8,
            .Lse,
            .Crc,
            .Dotprod,
            .Lor,
            .Ssbs,
            .Uaops,
            .Vh,
            .Ras,
            .Neoversen1,
        },
        CpuInfo(@This()).create(.Saphira, "saphira", &[_]FeatureType {
            .ZczFp,
            .Nv,
            .Am,
            .Lse,
            .Sel2,
            .Lor,
            .Tracev84,
            .Uaops,
            .UsePostraScheduler,
            .CustomCheapAsMove,
            .Ccpp,
            .Perfmon,
            .TlbRmi,
            .PredictableSelectExpensive,
            .Fmi,
            .Rcpc,
            .Pan,
            .Rdm,
            .LslFast,
            .Pa,
            .ZczGp,
            .Dit,
            .Ras,
            .Spe,
            .Mpam,
            .FpArmv8,
            .Ccidx,
            .Dotprod,
            .Crc,
            .Vh,
            .Saphira,
        },
        CpuInfo(@This()).create(.Thunderx, "thunderx", &[_]FeatureType {
            .Perfmon,
            .FpArmv8,
            .Crc,
            .UsePostraScheduler,
            .PredictableSelectExpensive,
            .Thunderx,
        },
        CpuInfo(@This()).create(.Thunderx2t99, "thunderx2t99", &[_]FeatureType {
            .Pan,
            .Rdm,
            .Vh,
            .AggressiveFma,
            .FpArmv8,
            .Lse,
            .Crc,
            .Lor,
            .UsePostraScheduler,
            .ArithBccFusion,
            .PredictableSelectExpensive,
            .Thunderx2t99,
        },
        CpuInfo(@This()).create(.Thunderxt81, "thunderxt81", &[_]FeatureType {
            .Perfmon,
            .FpArmv8,
            .Crc,
            .UsePostraScheduler,
            .PredictableSelectExpensive,
            .Thunderxt81,
        },
        CpuInfo(@This()).create(.Thunderxt83, "thunderxt83", &[_]FeatureType {
            .Perfmon,
            .FpArmv8,
            .Crc,
            .UsePostraScheduler,
            .PredictableSelectExpensive,
            .Thunderxt83,
        },
        CpuInfo(@This()).create(.Thunderxt88, "thunderxt88", &[_]FeatureType {
            .Perfmon,
            .FpArmv8,
            .Crc,
            .UsePostraScheduler,
            .PredictableSelectExpensive,
            .Thunderxt88,
        },
        CpuInfo(@This()).create(.Tsv110, "tsv110", &[_]FeatureType {
            .Uaops,
            .Spe,
            .Ccpp,
            .Pan,
            .Rdm,
            .FuseAes,
            .Vh,
            .Perfmon,
            .FpArmv8,
            .Lse,
            .Crc,
            .Dotprod,
            .Lor,
            .UsePostraScheduler,
            .CustomCheapAsMove,
            .Ras,
            .Tsv110,
        },
    };
};
