const std = @import("std");
const builtin = @import("builtin");

pub const Boolean = enum {
    auto_left_margin,
    auto_right_margin,
    no_esc_ctlc,
    ceol_standout_glitch,
    eat_newline_glitch,
    erase_overstrike,
    generic_type,
    hard_copy,
    has_meta_key,
    has_status_line,
    insert_null_glitch,
    memory_above,
    memory_below,
    move_insert_mode,
    move_standout_mode,
    over_strike,
    status_line_esc_ok,
    dest_tabs_magic_smso,
    tilde_glitch,
    transparent_underline,
    xon_xoff,
    needs_xon_xoff,
    prtr_silent,
    hard_cursor,
    non_rev_rmcup,
    no_pad_char,
    non_dest_scroll_region,
    can_change,
    back_color_erase,
    hue_lightness_saturation,
    col_addr_glitch,
    cr_cancels_micro_mode,
    has_print_wheel,
    row_addr_glitch,
    semi_auto_right_margin,
    cpi_changes_res,
    lpi_changes_res,

    // Internal caps
    backspaces_with_bs,
    crt_no_scrolling,
    no_correctly_working_cr,
    gnu_has_meta_key,
    linefeed_is_newline,
    has_hardware_tabs,
    return_does_clr_eol,
};

pub const Numeric = enum {
    columns,
    init_tabs,
    lines,
    lines_of_memory,
    magic_cookie_glitch,
    padding_baud_rate,
    virtual_terminal,
    width_status_line,
    num_labels,
    label_height,
    label_width,
    max_attributes,
    maximum_windows,
    max_colors,
    max_pairs,
    no_color_video,
    buffer_capacity,
    dot_vert_spacing,
    dot_horz_spacing,
    max_micro_address,
    max_micro_jump,
    micro_col_size,
    micro_line_size,
    number_of_pins,
    output_res_char,
    output_res_line,
    output_res_horz_inch,
    output_res_vert_inch,
    print_rate,
    wide_char_size,
    buttons,
    bit_image_entwining,
    bit_image_type,

    // Internal caps
    magic_cookie_glitch_ul,
    carriage_return_delay,
    new_line_delay,
    backspace_delay,
    horizontal_tab_delay,
    number_of_function_keys,
};

pub const String = enum {
    back_tab,
    bell,
    carriage_return,
    change_scroll_region,
    clear_all_tabs,
    clear_screen,
    clr_eol,
    clr_eos,
    column_address,
    command_character,
    cursor_address,
    cursor_down,
    cursor_home,
    cursor_invisible,
    cursor_left,
    cursor_mem_address,
    cursor_normal,
    cursor_right,
    cursor_to_ll,
    cursor_up,
    cursor_visible,
    delete_character,
    delete_line,
    dis_status_line,
    down_half_line,
    enter_alt_charset_mode,
    enter_blink_mode,
    enter_bold_mode,
    enter_ca_mode,
    enter_delete_mode,
    enter_dim_mode,
    enter_insert_mode,
    enter_secure_mode,
    enter_protected_mode,
    enter_reverse_mode,
    enter_standout_mode,
    enter_underline_mode,
    erase_chars,
    exit_alt_charset_mode,
    exit_attribute_mode,
    exit_ca_mode,
    exit_delete_mode,
    exit_insert_mode,
    exit_standout_mode,
    exit_underline_mode,
    flash_screen,
    form_feed,
    from_status_line,
    init_1string,
    init_2string,
    init_3string,
    init_file,
    insert_character,
    insert_line,
    insert_padding,
    key_backspace,
    key_catab,
    key_clear,
    key_ctab,
    key_dc,
    key_dl,
    key_down,
    key_eic,
    key_eol,
    key_eos,
    key_f0,
    key_f1,
    key_f10,
    key_f2,
    key_f3,
    key_f4,
    key_f5,
    key_f6,
    key_f7,
    key_f8,
    key_f9,
    key_home,
    key_ic,
    key_il,
    key_left,
    key_ll,
    key_npage,
    key_ppage,
    key_right,
    key_sf,
    key_sr,
    key_stab,
    key_up,
    keypad_local,
    keypad_xmit,
    lab_f0,
    lab_f1,
    lab_f10,
    lab_f2,
    lab_f3,
    lab_f4,
    lab_f5,
    lab_f6,
    lab_f7,
    lab_f8,
    lab_f9,
    meta_off,
    meta_on,
    newline,
    pad_char,
    parm_dch,
    parm_delete_line,
    parm_down_cursor,
    parm_ich,
    parm_index,
    parm_insert_line,
    parm_left_cursor,
    parm_right_cursor,
    parm_rindex,
    parm_up_cursor,
    pkey_key,
    pkey_local,
    pkey_xmit,
    print_screen,
    prtr_off,
    prtr_on,
    repeat_char,
    reset_1string,
    reset_2string,
    reset_3string,
    reset_file,
    restore_cursor,
    row_address,
    save_cursor,
    scroll_forward,
    scroll_reverse,
    set_attributes,
    set_tab,
    set_window,
    tab,
    to_status_line,
    underline_char,
    up_half_line,
    init_prog,
    key_a1,
    key_a3,
    key_b2,
    key_c1,
    key_c3,
    prtr_non,
    char_padding,
    acs_chars,
    plab_norm,
    key_btab,
    enter_xon_mode,
    exit_xon_mode,
    enter_am_mode,
    exit_am_mode,
    xon_character,
    xoff_character,
    ena_acs,
    label_on,
    label_off,
    key_beg,
    key_cancel,
    key_close,
    key_command,
    key_copy,
    key_create,
    key_end,
    key_enter,
    key_exit,
    key_find,
    key_help,
    key_mark,
    key_message,
    key_move,
    key_next,
    key_open,
    key_options,
    key_previous,
    key_print,
    key_redo,
    key_reference,
    key_refresh,
    key_replace,
    key_restart,
    key_resume,
    key_save,
    key_suspend,
    key_undo,
    key_sbeg,
    key_scancel,
    key_scommand,
    key_scopy,
    key_screate,
    key_sdc,
    key_sdl,
    key_select,
    key_send,
    key_seol,
    key_sexit,
    key_sfind,
    key_shelp,
    key_shome,
    key_sic,
    key_sleft,
    key_smessage,
    key_smove,
    key_snext,
    key_soptions,
    key_sprevious,
    key_sprint,
    key_sredo,
    key_sreplace,
    key_sright,
    key_srsume,
    key_ssave,
    key_ssuspend,
    key_sundo,
    req_for_input,
    key_f11,
    key_f12,
    key_f13,
    key_f14,
    key_f15,
    key_f16,
    key_f17,
    key_f18,
    key_f19,
    key_f20,
    key_f21,
    key_f22,
    key_f23,
    key_f24,
    key_f25,
    key_f26,
    key_f27,
    key_f28,
    key_f29,
    key_f30,
    key_f31,
    key_f32,
    key_f33,
    key_f34,
    key_f35,
    key_f36,
    key_f37,
    key_f38,
    key_f39,
    key_f40,
    key_f41,
    key_f42,
    key_f43,
    key_f44,
    key_f45,
    key_f46,
    key_f47,
    key_f48,
    key_f49,
    key_f50,
    key_f51,
    key_f52,
    key_f53,
    key_f54,
    key_f55,
    key_f56,
    key_f57,
    key_f58,
    key_f59,
    key_f60,
    key_f61,
    key_f62,
    key_f63,
    clr_bol,
    clear_margins,
    set_left_margin,
    set_right_margin,
    label_format,
    set_clock,
    display_clock,
    remove_clock,
    create_window,
    goto_window,
    hangup,
    dial_phone,
    quick_dial,
    tone,
    pulse,
    flash_hook,
    fixed_pause,
    wait_tone,
    user0,
    user1,
    user2,
    user3,
    user4,
    user5,
    user6,
    user7,
    user8,
    user9,
    orig_pair,
    orig_colors,
    initialize_color,
    initialize_pair,
    set_color_pair,
    set_foreground,
    set_background,
    change_char_pitch,
    change_line_pitch,
    change_res_horz,
    change_res_vert,
    define_char,
    enter_doublewide_mode,
    enter_draft_quality,
    enter_italics_mode,
    enter_leftward_mode,
    enter_micro_mode,
    enter_near_letter_quality,
    enter_normal_quality,
    enter_shadow_mode,
    enter_subscript_mode,
    enter_superscript_mode,
    enter_upward_mode,
    exit_doublewide_mode,
    exit_italics_mode,
    exit_leftward_mode,
    exit_micro_mode,
    exit_shadow_mode,
    exit_subscript_mode,
    exit_superscript_mode,
    exit_upward_mode,
    micro_column_address,
    micro_down,
    micro_left,
    micro_right,
    micro_row_address,
    micro_up,
    order_of_pins,
    parm_down_micro,
    parm_left_micro,
    parm_right_micro,
    parm_up_micro,
    select_char_set,
    set_bottom_margin,
    set_bottom_margin_parm,
    set_left_margin_parm,
    set_right_margin_parm,
    set_top_margin,
    set_top_margin_parm,
    start_bit_image,
    start_char_set_def,
    stop_bit_image,
    stop_char_set_def,
    subscript_characters,
    superscript_characters,
    these_cause_cr,
    zero_motion,
    char_set_names,
    key_mouse,
    mouse_info,
    req_mouse_pos,
    get_mouse,
    set_a_foreground,
    set_a_background,
    pkey_plab,
    device_type,
    code_set_init,
    set0_des_seq,
    set1_des_seq,
    set2_des_seq,
    set3_des_seq,
    set_lr_margin,
    set_tb_margin,
    bit_image_repeat,
    bit_image_newline,
    bit_image_carriage_return,
    color_names,
    define_bit_image_region,
    end_bit_image_region,
    set_color_band,
    set_page_length,
    display_pc_char,
    enter_pc_charset_mode,
    exit_pc_charset_mode,
    enter_scancode_mode,
    exit_scancode_mode,
    pc_term_options,
    scancode_escape,
    alt_scancode_esc,
    enter_horizontal_hl_mode,
    enter_left_hl_mode,
    enter_low_hl_mode,
    enter_right_hl_mode,
    enter_top_hl_mode,
    enter_vertical_hl_mode,
    set_a_attributes,
    set_pglen_inch,

    // Internal caps
    termcap_init2,
    termcap_reset,
    linefeed_if_not_lf,
    backspace_if_not_bs,
    other_non_function_keys,
    arrow_key_map,
    acs_ulcorner,
    acs_llcorner,
    acs_urcorner,
    acs_lrcorner,
    acs_ltee,
    acs_rtee,
    acs_btee,
    acs_ttee,
    acs_hline,
    acs_vline,
    acs_plus,
    memory_lock,
    memory_unlock,
    box_chars_1,
};

pub const Terms = union(enum) {
    boolean: Boolean,
    numeric: Numeric,
    string: String
};

const Dictionary = struct { short: []const u8, long: Terms };

const dictionary = [_]Dictionary{
    // Boolean
    .{ .short = "bw", .long = .{ .boolean = .auto_left_margin } },
    .{ .short = "am", .long = .{ .boolean = .auto_right_margin } },
    .{ .short = "bce", .long = .{ .boolean = .back_color_erase } },
    .{ .short = "ccc", .long = .{ .boolean = .can_change } },
    .{ .short = "xhp", .long = .{ .boolean = .ceol_standout_glitch } },
    .{ .short = "xhpa", .long = .{ .boolean = .col_addr_glitch } },
    .{ .short = "cpix", .long = .{ .boolean = .cpi_changes_res } },
    .{ .short = "crxm", .long = .{ .boolean = .cr_cancels_micro_mode } },
    .{ .short = "xt", .long = .{ .boolean = .dest_tabs_magic_smso } },
    .{ .short = "xenl", .long = .{ .boolean = .eat_newline_glitch } },
    .{ .short = "eo", .long = .{ .boolean = .erase_overstrike } },
    .{ .short = "gn", .long = .{ .boolean = .generic_type } },
    .{ .short = "hc", .long = .{ .boolean = .hard_copy } },
    .{ .short = "chts", .long = .{ .boolean = .hard_cursor } },
    .{ .short = "km", .long = .{ .boolean = .has_meta_key } },
    .{ .short = "daisy", .long = .{ .boolean = .has_print_wheel } },
    .{ .short = "hs", .long = .{ .boolean = .has_status_line } },
    .{ .short = "hls", .long = .{ .boolean = .hue_lightness_saturation } },
    .{ .short = "in", .long = .{ .boolean = .insert_null_glitch } },
    .{ .short = "lpix", .long = .{ .boolean = .lpi_changes_res } },
    .{ .short = "da", .long = .{ .boolean = .memory_above } },
    .{ .short = "db", .long = .{ .boolean = .memory_below } },
    .{ .short = "mir", .long = .{ .boolean = .move_insert_mode } },
    .{ .short = "msgr", .long = .{ .boolean = .move_standout_mode } },
    .{ .short = "nxon", .long = .{ .boolean = .needs_xon_xoff } },
    .{ .short = "xsb", .long = .{ .boolean = .no_esc_ctlc } },
    .{ .short = "npc", .long = .{ .boolean = .no_pad_char } },
    .{ .short = "ndscr", .long = .{ .boolean = .non_dest_scroll_region } },
    .{ .short = "nrrmc", .long = .{ .boolean = .non_rev_rmcup } },
    .{ .short = "os", .long = .{ .boolean = .over_strike } },
    .{ .short = "mc5i", .long = .{ .boolean = .prtr_silent } },
    .{ .short = "xvpa", .long = .{ .boolean = .row_addr_glitch } },
    .{ .short = "sam", .long = .{ .boolean = .semi_auto_right_margin } },
    .{ .short = "eslok", .long = .{ .boolean = .status_line_esc_ok } },
    .{ .short = "hz", .long = .{ .boolean = .tilde_glitch } },
    .{ .short = "ul", .long = .{ .boolean = .transparent_underline } },
    .{ .short = "xon", .long = .{ .boolean = .xon_xoff } },

    // Numeric
    .{ .short = "cols", .long = .{ .numeric = .columns } },
    .{ .short = "it", .long = .{ .numeric = .init_tabs } },
    .{ .short = "lh", .long = .{ .numeric = .label_height } },
    .{ .short = "lw", .long = .{ .numeric = .label_width } },
    .{ .short = "lines", .long = .{ .numeric = .lines } },
    .{ .short = "lm", .long = .{ .numeric = .lines_of_memory } },
    .{ .short = "xmc", .long = .{ .numeric = .magic_cookie_glitch } },
    .{ .short = "ma", .long = .{ .numeric = .max_attributes } },
    .{ .short = "colors", .long = .{ .numeric = .max_colors } },
    .{ .short = "pairs", .long = .{ .numeric = .max_pairs } },
    .{ .short = "wnum", .long = .{ .numeric = .maximum_windows } },
    .{ .short = "ncv", .long = .{ .numeric = .no_color_video } },
    .{ .short = "nlab", .long = .{ .numeric = .num_labels } },
    .{ .short = "pb", .long = .{ .numeric = .padding_baud_rate } },
    .{ .short = "vt", .long = .{ .numeric = .virtual_terminal } },
    .{ .short = "wsl", .long = .{ .numeric = .width_status_line } },
    .{ .short = "bitwin", .long = .{ .numeric = .bit_image_entwining } },
    .{ .short = "bitype", .long = .{ .numeric = .bit_image_type } },
    .{ .short = "bufsz", .long = .{ .numeric = .buffer_capacity } },
    .{ .short = "btns", .long = .{ .numeric = .buttons } },
    .{ .short = "spinh", .long = .{ .numeric = .dot_horz_spacing } },
    .{ .short = "spinv", .long = .{ .numeric = .dot_vert_spacing } },
    .{ .short = "maddr", .long = .{ .numeric = .max_micro_address } },
    .{ .short = "mjump", .long = .{ .numeric = .max_micro_jump } },
    .{ .short = "mcs", .long = .{ .numeric = .micro_col_size } },
    .{ .short = "mls", .long = .{ .numeric = .micro_line_size } },
    .{ .short = "npins", .long = .{ .numeric = .number_of_pins } },
    .{ .short = "orc", .long = .{ .numeric = .output_res_char } },
    .{ .short = "orhi", .long = .{ .numeric = .output_res_horz_inch } },
    .{ .short = "orl", .long = .{ .numeric = .output_res_line } },
    .{ .short = "orvi", .long = .{ .numeric = .output_res_vert_inch } },
    .{ .short = "cps", .long = .{ .numeric = .print_rate } },
    .{ .short = "widcs", .long = .{ .numeric = .wide_char_size } },

    // String
    .{ .short = "acsc", .long = .{ .string = .acs_chars } },
    .{ .short = "cbt", .long = .{ .string = .back_tab } },
    .{ .short = "bel", .long = .{ .string = .bell } },
    .{ .short = "cr", .long = .{ .string = .carriage_return } },
    .{ .short = "cpi", .long = .{ .string = .change_char_pitch } },
    .{ .short = "lpi", .long = .{ .string = .change_line_pitch } },
    .{ .short = "chr", .long = .{ .string = .change_res_horz } },
    .{ .short = "cvr", .long = .{ .string = .change_res_vert } },
    .{ .short = "csr", .long = .{ .string = .change_scroll_region } },
    .{ .short = "rmp", .long = .{ .string = .char_padding } },
    .{ .short = "tbc", .long = .{ .string = .clear_all_tabs } },
    .{ .short = "mgc", .long = .{ .string = .clear_margins } },
    .{ .short = "clear", .long = .{ .string = .clear_screen } },
    .{ .short = "el1", .long = .{ .string = .clr_bol } },
    .{ .short = "el", .long = .{ .string = .clr_eol } },
    .{ .short = "ed", .long = .{ .string = .clr_eos } },
    .{ .short = "hpa", .long = .{ .string = .column_address } },
    .{ .short = "cmdch", .long = .{ .string = .command_character } },
    .{ .short = "cwin", .long = .{ .string = .create_window } },
    .{ .short = "cup", .long = .{ .string = .cursor_address } },
    .{ .short = "cud1", .long = .{ .string = .cursor_down } },
    .{ .short = "home", .long = .{ .string = .cursor_home } },
    .{ .short = "civis", .long = .{ .string = .cursor_invisible } },
    .{ .short = "cub1", .long = .{ .string = .cursor_left } },
    .{ .short = "mrcup", .long = .{ .string = .cursor_mem_address } },
    .{ .short = "cnorm", .long = .{ .string = .cursor_normal } },
    .{ .short = "cuf1", .long = .{ .string = .cursor_right } },
    .{ .short = "ll", .long = .{ .string = .cursor_to_ll } },
    .{ .short = "cuu1", .long = .{ .string = .cursor_up } },
    .{ .short = "cvvis", .long = .{ .string = .cursor_visible } },
    .{ .short = "defc", .long = .{ .string = .define_char } },
    .{ .short = "dch1", .long = .{ .string = .delete_character } },
    .{ .short = "dl1", .long = .{ .string = .delete_line } },
    .{ .short = "dial", .long = .{ .string = .dial_phone } },
    .{ .short = "dsl", .long = .{ .string = .dis_status_line } },
    .{ .short = "dclk", .long = .{ .string = .display_clock } },
    .{ .short = "hd", .long = .{ .string = .down_half_line } },
    .{ .short = "enacs", .long = .{ .string = .ena_acs } },
    .{ .short = "smacs", .long = .{ .string = .enter_alt_charset_mode } },
    .{ .short = "smam", .long = .{ .string = .enter_am_mode } },
    .{ .short = "blink", .long = .{ .string = .enter_blink_mode } },
    .{ .short = "bold", .long = .{ .string = .enter_bold_mode } },
    .{ .short = "smcup", .long = .{ .string = .enter_ca_mode } },
    .{ .short = "smdc", .long = .{ .string = .enter_delete_mode } },
    .{ .short = "dim", .long = .{ .string = .enter_dim_mode } },
    .{ .short = "swidm", .long = .{ .string = .enter_doublewide_mode } },
    .{ .short = "sdrfq", .long = .{ .string = .enter_draft_quality } },
    .{ .short = "smir", .long = .{ .string = .enter_insert_mode } },
    .{ .short = "sitm", .long = .{ .string = .enter_italics_mode } },
    .{ .short = "slm", .long = .{ .string = .enter_leftward_mode } },
    .{ .short = "smicm", .long = .{ .string = .enter_micro_mode } },
    .{ .short = "snlq", .long = .{ .string = .enter_near_letter_quality } },
    .{ .short = "snrmq", .long = .{ .string = .enter_normal_quality } },
    .{ .short = "prot", .long = .{ .string = .enter_protected_mode } },
    .{ .short = "rev", .long = .{ .string = .enter_reverse_mode } },
    .{ .short = "invis", .long = .{ .string = .enter_secure_mode } },
    .{ .short = "sshm", .long = .{ .string = .enter_shadow_mode } },
    .{ .short = "smso", .long = .{ .string = .enter_standout_mode } },
    .{ .short = "ssubm", .long = .{ .string = .enter_subscript_mode } },
    .{ .short = "ssupm", .long = .{ .string = .enter_superscript_mode } },
    .{ .short = "smul", .long = .{ .string = .enter_underline_mode } },
    .{ .short = "sum", .long = .{ .string = .enter_upward_mode } },
    .{ .short = "smxon", .long = .{ .string = .enter_xon_mode } },
    .{ .short = "ech", .long = .{ .string = .erase_chars } },
    .{ .short = "rmacs", .long = .{ .string = .exit_alt_charset_mode } },
    .{ .short = "rmam", .long = .{ .string = .exit_am_mode } },
    .{ .short = "sgr0", .long = .{ .string = .exit_attribute_mode } },
    .{ .short = "rmcup", .long = .{ .string = .exit_ca_mode } },
    .{ .short = "rmdc", .long = .{ .string = .exit_delete_mode } },
    .{ .short = "rwidm", .long = .{ .string = .exit_doublewide_mode } },
    .{ .short = "rmir", .long = .{ .string = .exit_insert_mode } },
    .{ .short = "ritm", .long = .{ .string = .exit_italics_mode } },
    .{ .short = "rlm", .long = .{ .string = .exit_leftward_mode } },
    .{ .short = "rmicm", .long = .{ .string = .exit_micro_mode } },
    .{ .short = "rshm", .long = .{ .string = .exit_shadow_mode } },
    .{ .short = "rmso", .long = .{ .string = .exit_standout_mode } },
    .{ .short = "rsubm", .long = .{ .string = .exit_subscript_mode } },
    .{ .short = "rsupm", .long = .{ .string = .exit_superscript_mode } },
    .{ .short = "rmul", .long = .{ .string = .exit_underline_mode } },
    .{ .short = "rum", .long = .{ .string = .exit_upward_mode } },
    .{ .short = "rmxon", .long = .{ .string = .exit_xon_mode } },
    .{ .short = "pause", .long = .{ .string = .fixed_pause } },
    .{ .short = "hook", .long = .{ .string = .flash_hook } },
    .{ .short = "flash", .long = .{ .string = .flash_screen } },
    .{ .short = "ff", .long = .{ .string = .form_feed } },
    .{ .short = "fsl", .long = .{ .string = .from_status_line } },
    .{ .short = "wingo", .long = .{ .string = .goto_window } },
    .{ .short = "hup", .long = .{ .string = .hangup } },
    .{ .short = "is1", .long = .{ .string = .init_1string } },
    .{ .short = "is2", .long = .{ .string = .init_2string } },
    .{ .short = "is3", .long = .{ .string = .init_3string } },
    .{ .short = "if", .long = .{ .string = .init_file } },
    .{ .short = "iprog", .long = .{ .string = .init_prog } },
    .{ .short = "initc", .long = .{ .string = .initialize_color } },
    .{ .short = "initp", .long = .{ .string = .initialize_pair } },
    .{ .short = "ich1", .long = .{ .string = .insert_character } },
    .{ .short = "il1", .long = .{ .string = .insert_line } },
    .{ .short = "ip", .long = .{ .string = .insert_padding } },
    .{ .short = "ka1", .long = .{ .string = .key_a1 } },
    .{ .short = "ka3", .long = .{ .string = .key_a3 } },
    .{ .short = "kb2", .long = .{ .string = .key_b2 } },
    .{ .short = "kbs", .long = .{ .string = .key_backspace } },
    .{ .short = "kbeg", .long = .{ .string = .key_beg } },
    .{ .short = "kcbt", .long = .{ .string = .key_btab } },
    .{ .short = "kc1", .long = .{ .string = .key_c1 } },
    .{ .short = "kc3", .long = .{ .string = .key_c3 } },
    .{ .short = "kcan", .long = .{ .string = .key_cancel } },
    .{ .short = "ktbc", .long = .{ .string = .key_catab } },
    .{ .short = "kclr", .long = .{ .string = .key_clear } },
    .{ .short = "kclo", .long = .{ .string = .key_close } },
    .{ .short = "kcmd", .long = .{ .string = .key_command } },
    .{ .short = "kcpy", .long = .{ .string = .key_copy } },
    .{ .short = "kcrt", .long = .{ .string = .key_create } },
    .{ .short = "kctab", .long = .{ .string = .key_ctab } },
    .{ .short = "kdch1", .long = .{ .string = .key_dc } },
    .{ .short = "kdl1", .long = .{ .string = .key_dl } },
    .{ .short = "kcud1", .long = .{ .string = .key_down } },
    .{ .short = "krmir", .long = .{ .string = .key_eic } },
    .{ .short = "kend", .long = .{ .string = .key_end } },
    .{ .short = "kent", .long = .{ .string = .key_enter } },
    .{ .short = "kel", .long = .{ .string = .key_eol } },
    .{ .short = "ked", .long = .{ .string = .key_eos } },
    .{ .short = "kext", .long = .{ .string = .key_exit } },
    .{ .short = "kf0", .long = .{ .string = .key_f0 } },
    .{ .short = "kf1", .long = .{ .string = .key_f1 } },
    .{ .short = "kf10", .long = .{ .string = .key_f10 } },
    .{ .short = "kf11", .long = .{ .string = .key_f11 } },
    .{ .short = "kf12", .long = .{ .string = .key_f12 } },
    .{ .short = "kf13", .long = .{ .string = .key_f13 } },
    .{ .short = "kf14", .long = .{ .string = .key_f14 } },
    .{ .short = "kf15", .long = .{ .string = .key_f15 } },
    .{ .short = "kf16", .long = .{ .string = .key_f16 } },
    .{ .short = "kf17", .long = .{ .string = .key_f17 } },
    .{ .short = "kf18", .long = .{ .string = .key_f18 } },
    .{ .short = "kf19", .long = .{ .string = .key_f19 } },
    .{ .short = "kf2", .long = .{ .string = .key_f2 } },
    .{ .short = "kf20", .long = .{ .string = .key_f20 } },
    .{ .short = "kf21", .long = .{ .string = .key_f21 } },
    .{ .short = "kf22", .long = .{ .string = .key_f22 } },
    .{ .short = "kf23", .long = .{ .string = .key_f23 } },
    .{ .short = "kf24", .long = .{ .string = .key_f24 } },
    .{ .short = "kf25", .long = .{ .string = .key_f25 } },
    .{ .short = "kf26", .long = .{ .string = .key_f26 } },
    .{ .short = "kf27", .long = .{ .string = .key_f27 } },
    .{ .short = "kf28", .long = .{ .string = .key_f28 } },
    .{ .short = "kf29", .long = .{ .string = .key_f29 } },
    .{ .short = "kf3", .long = .{ .string = .key_f3 } },
    .{ .short = "kf30", .long = .{ .string = .key_f30 } },
    .{ .short = "kf31", .long = .{ .string = .key_f31 } },
    .{ .short = "kf32", .long = .{ .string = .key_f32 } },
    .{ .short = "kf33", .long = .{ .string = .key_f33 } },
    .{ .short = "kf34", .long = .{ .string = .key_f34 } },
    .{ .short = "kf35", .long = .{ .string = .key_f35 } },
    .{ .short = "kf36", .long = .{ .string = .key_f36 } },
    .{ .short = "kf37", .long = .{ .string = .key_f37 } },
    .{ .short = "kf38", .long = .{ .string = .key_f38 } },
    .{ .short = "kf39", .long = .{ .string = .key_f39 } },
    .{ .short = "kf4", .long = .{ .string = .key_f4 } },
    .{ .short = "kf40", .long = .{ .string = .key_f40 } },
    .{ .short = "kf41", .long = .{ .string = .key_f41 } },
    .{ .short = "kf42", .long = .{ .string = .key_f42 } },
    .{ .short = "kf43", .long = .{ .string = .key_f43 } },
    .{ .short = "kf44", .long = .{ .string = .key_f44 } },
    .{ .short = "kf45", .long = .{ .string = .key_f45 } },
    .{ .short = "kf46", .long = .{ .string = .key_f46 } },
    .{ .short = "kf47", .long = .{ .string = .key_f47 } },
    .{ .short = "kf48", .long = .{ .string = .key_f48 } },
    .{ .short = "kf49", .long = .{ .string = .key_f49 } },
    .{ .short = "kf5", .long = .{ .string = .key_f5 } },
    .{ .short = "kf50", .long = .{ .string = .key_f50 } },
    .{ .short = "kf51", .long = .{ .string = .key_f51 } },
    .{ .short = "kf52", .long = .{ .string = .key_f52 } },
    .{ .short = "kf53", .long = .{ .string = .key_f53 } },
    .{ .short = "kf54", .long = .{ .string = .key_f54 } },
    .{ .short = "kf55", .long = .{ .string = .key_f55 } },
    .{ .short = "kf56", .long = .{ .string = .key_f56 } },
    .{ .short = "kf57", .long = .{ .string = .key_f57 } },
    .{ .short = "kf58", .long = .{ .string = .key_f58 } },
    .{ .short = "kf59", .long = .{ .string = .key_f59 } },
    .{ .short = "kf6", .long = .{ .string = .key_f6 } },
    .{ .short = "kf60", .long = .{ .string = .key_f60 } },
    .{ .short = "kf61", .long = .{ .string = .key_f61 } },
    .{ .short = "kf62", .long = .{ .string = .key_f62 } },
    .{ .short = "kf63", .long = .{ .string = .key_f63 } },
    .{ .short = "kf7", .long = .{ .string = .key_f7 } },
    .{ .short = "kf8", .long = .{ .string = .key_f8 } },
    .{ .short = "kf9", .long = .{ .string = .key_f9 } },
    .{ .short = "kfnd", .long = .{ .string = .key_find } },
    .{ .short = "khlp", .long = .{ .string = .key_help } },
    .{ .short = "khome", .long = .{ .string = .key_home } },
    .{ .short = "kich1", .long = .{ .string = .key_ic } },
    .{ .short = "kil1", .long = .{ .string = .key_il } },
    .{ .short = "kcub1", .long = .{ .string = .key_left } },
    .{ .short = "kll", .long = .{ .string = .key_ll } },
    .{ .short = "kmrk", .long = .{ .string = .key_mark } },
    .{ .short = "kmsg", .long = .{ .string = .key_message } },
    .{ .short = "kmov", .long = .{ .string = .key_move } },
    .{ .short = "knxt", .long = .{ .string = .key_next } },
    .{ .short = "knp", .long = .{ .string = .key_npage } },
    .{ .short = "kopn", .long = .{ .string = .key_open } },
    .{ .short = "kopt", .long = .{ .string = .key_options } },
    .{ .short = "kpp", .long = .{ .string = .key_ppage } },
    .{ .short = "kprv", .long = .{ .string = .key_previous } },
    .{ .short = "kprt", .long = .{ .string = .key_print } },
    .{ .short = "krdo", .long = .{ .string = .key_redo } },
    .{ .short = "kref", .long = .{ .string = .key_reference } },
    .{ .short = "krfr", .long = .{ .string = .key_refresh } },
    .{ .short = "krpl", .long = .{ .string = .key_replace } },
    .{ .short = "krst", .long = .{ .string = .key_restart } },
    .{ .short = "kres", .long = .{ .string = .key_resume } },
    .{ .short = "kcuf1", .long = .{ .string = .key_right } },
    .{ .short = "ksav", .long = .{ .string = .key_save } },
    .{ .short = "kBEG", .long = .{ .string = .key_sbeg } },
    .{ .short = "kCAN", .long = .{ .string = .key_scancel } },
    .{ .short = "kCMD", .long = .{ .string = .key_scommand } },
    .{ .short = "kCPY", .long = .{ .string = .key_scopy } },
    .{ .short = "kCRT", .long = .{ .string = .key_screate } },
    .{ .short = "kDC", .long = .{ .string = .key_sdc } },
    .{ .short = "kDL", .long = .{ .string = .key_sdl } },
    .{ .short = "kslt", .long = .{ .string = .key_select } },
    .{ .short = "kEND", .long = .{ .string = .key_send } },
    .{ .short = "kEOL", .long = .{ .string = .key_seol } },
    .{ .short = "kEXT", .long = .{ .string = .key_sexit } },
    .{ .short = "kind", .long = .{ .string = .key_sf } },
    .{ .short = "kFND", .long = .{ .string = .key_sfind } },
    .{ .short = "kHLP", .long = .{ .string = .key_shelp } },
    .{ .short = "kHOM", .long = .{ .string = .key_shome } },
    .{ .short = "kIC", .long = .{ .string = .key_sic } },
    .{ .short = "kLFT", .long = .{ .string = .key_sleft } },
    .{ .short = "kMSG", .long = .{ .string = .key_smessage } },
    .{ .short = "kMOV", .long = .{ .string = .key_smove } },
    .{ .short = "kNXT", .long = .{ .string = .key_snext } },
    .{ .short = "kOPT", .long = .{ .string = .key_soptions } },
    .{ .short = "kPRV", .long = .{ .string = .key_sprevious } },
    .{ .short = "kPRT", .long = .{ .string = .key_sprint } },
    .{ .short = "kri", .long = .{ .string = .key_sr } },
    .{ .short = "kRDO", .long = .{ .string = .key_sredo } },
    .{ .short = "kRPL", .long = .{ .string = .key_sreplace } },
    .{ .short = "kRIT", .long = .{ .string = .key_sright } },
    .{ .short = "kRES", .long = .{ .string = .key_srsume } },
    .{ .short = "kSAV", .long = .{ .string = .key_ssave } },
    .{ .short = "kSPD", .long = .{ .string = .key_ssuspend } },
    .{ .short = "khts", .long = .{ .string = .key_stab } },
    .{ .short = "kUND", .long = .{ .string = .key_sundo } },
    .{ .short = "kspd", .long = .{ .string = .key_suspend } },
    .{ .short = "kund", .long = .{ .string = .key_undo } },
    .{ .short = "kcuu1", .long = .{ .string = .key_up } },
    .{ .short = "rmkx", .long = .{ .string = .keypad_local } },
    .{ .short = "smkx", .long = .{ .string = .keypad_xmit } },
    .{ .short = "lf0", .long = .{ .string = .lab_f0 } },
    .{ .short = "lf1", .long = .{ .string = .lab_f1 } },
    .{ .short = "lf10", .long = .{ .string = .lab_f10 } },
    .{ .short = "lf2", .long = .{ .string = .lab_f2 } },
    .{ .short = "lf3", .long = .{ .string = .lab_f3 } },
    .{ .short = "lf4", .long = .{ .string = .lab_f4 } },
    .{ .short = "lf5", .long = .{ .string = .lab_f5 } },
    .{ .short = "lf6", .long = .{ .string = .lab_f6 } },
    .{ .short = "lf7", .long = .{ .string = .lab_f7 } },
    .{ .short = "lf8", .long = .{ .string = .lab_f8 } },
    .{ .short = "lf9", .long = .{ .string = .lab_f9 } },
    .{ .short = "fln", .long = .{ .string = .label_format } },
    .{ .short = "rmln", .long = .{ .string = .label_off } },
    .{ .short = "smln", .long = .{ .string = .label_on } },
    .{ .short = "rmm", .long = .{ .string = .meta_off } },
    .{ .short = "smm", .long = .{ .string = .meta_on } },
    .{ .short = "mhpa", .long = .{ .string = .micro_column_address } },
    .{ .short = "mcud1", .long = .{ .string = .micro_down } },
    .{ .short = "mcub1", .long = .{ .string = .micro_left } },
    .{ .short = "mcuf1", .long = .{ .string = .micro_right } },
    .{ .short = "mvpa", .long = .{ .string = .micro_row_address } },
    .{ .short = "mcuu1", .long = .{ .string = .micro_up } },
    .{ .short = "nel", .long = .{ .string = .newline } },
    .{ .short = "porder", .long = .{ .string = .order_of_pins } },
    .{ .short = "oc", .long = .{ .string = .orig_colors } },
    .{ .short = "op", .long = .{ .string = .orig_pair } },
    .{ .short = "pad", .long = .{ .string = .pad_char } },
    .{ .short = "dch", .long = .{ .string = .parm_dch } },
    .{ .short = "dl", .long = .{ .string = .parm_delete_line } },
    .{ .short = "cud", .long = .{ .string = .parm_down_cursor } },
    .{ .short = "mcud", .long = .{ .string = .parm_down_micro } },
    .{ .short = "ich", .long = .{ .string = .parm_ich } },
    .{ .short = "indn", .long = .{ .string = .parm_index } },
    .{ .short = "il", .long = .{ .string = .parm_insert_line } },
    .{ .short = "cub", .long = .{ .string = .parm_left_cursor } },
    .{ .short = "mcub", .long = .{ .string = .parm_left_micro } },
    .{ .short = "cuf", .long = .{ .string = .parm_right_cursor } },
    .{ .short = "mcuf", .long = .{ .string = .parm_right_micro } },
    .{ .short = "rin", .long = .{ .string = .parm_rindex } },
    .{ .short = "cuu", .long = .{ .string = .parm_up_cursor } },
    .{ .short = "mcuu", .long = .{ .string = .parm_up_micro } },
    .{ .short = "pfkey", .long = .{ .string = .pkey_key } },
    .{ .short = "pfloc", .long = .{ .string = .pkey_local } },
    .{ .short = "pfx", .long = .{ .string = .pkey_xmit } },
    .{ .short = "pln", .long = .{ .string = .plab_norm } },
    .{ .short = "mc0", .long = .{ .string = .print_screen } },
    .{ .short = "mc5p", .long = .{ .string = .prtr_non } },
    .{ .short = "mc4", .long = .{ .string = .prtr_off } },
    .{ .short = "mc5", .long = .{ .string = .prtr_on } },
    .{ .short = "pulse", .long = .{ .string = .pulse } },
    .{ .short = "qdial", .long = .{ .string = .quick_dial } },
    .{ .short = "rmclk", .long = .{ .string = .remove_clock } },
    .{ .short = "rep", .long = .{ .string = .repeat_char } },
    .{ .short = "rfi", .long = .{ .string = .req_for_input } },
    .{ .short = "rs1", .long = .{ .string = .reset_1string } },
    .{ .short = "rs2", .long = .{ .string = .reset_2string } },
    .{ .short = "rs3", .long = .{ .string = .reset_3string } },
    .{ .short = "rf", .long = .{ .string = .reset_file } },
    .{ .short = "rc", .long = .{ .string = .restore_cursor } },
    .{ .short = "vpa", .long = .{ .string = .row_address } },
    .{ .short = "sc", .long = .{ .string = .save_cursor } },
    .{ .short = "ind", .long = .{ .string = .scroll_forward } },
    .{ .short = "ri", .long = .{ .string = .scroll_reverse } },
    .{ .short = "scs", .long = .{ .string = .select_char_set } },
    .{ .short = "sgr", .long = .{ .string = .set_attributes } },
    .{ .short = "setb", .long = .{ .string = .set_background } },
    .{ .short = "smgb", .long = .{ .string = .set_bottom_margin } },
    .{ .short = "smgbp", .long = .{ .string = .set_bottom_margin_parm } },
    .{ .short = "sclk", .long = .{ .string = .set_clock } },
    .{ .short = "scp", .long = .{ .string = .set_color_pair } },
    .{ .short = "setf", .long = .{ .string = .set_foreground } },
    .{ .short = "smgl", .long = .{ .string = .set_left_margin } },
    .{ .short = "smglp", .long = .{ .string = .set_left_margin_parm } },
    .{ .short = "smgr", .long = .{ .string = .set_right_margin } },
    .{ .short = "smgrp", .long = .{ .string = .set_right_margin_parm } },
    .{ .short = "hts", .long = .{ .string = .set_tab } },
    .{ .short = "smgt", .long = .{ .string = .set_top_margin } },
    .{ .short = "smgtp", .long = .{ .string = .set_top_margin_parm } },
    .{ .short = "wind", .long = .{ .string = .set_window } },
    .{ .short = "sbim", .long = .{ .string = .start_bit_image } },
    .{ .short = "scsd", .long = .{ .string = .start_char_set_def } },
    .{ .short = "rbim", .long = .{ .string = .stop_bit_image } },
    .{ .short = "rcsd", .long = .{ .string = .stop_char_set_def } },
    .{ .short = "subcs", .long = .{ .string = .subscript_characters } },
    .{ .short = "supcs", .long = .{ .string = .superscript_characters } },
    .{ .short = "ht", .long = .{ .string = .tab } },
    .{ .short = "docr", .long = .{ .string = .these_cause_cr } },
    .{ .short = "tsl", .long = .{ .string = .to_status_line } },
    .{ .short = "tone", .long = .{ .string = .tone } },
    .{ .short = "uc", .long = .{ .string = .underline_char } },
    .{ .short = "hu", .long = .{ .string = .up_half_line } },
    .{ .short = "u0", .long = .{ .string = .user0 } },
    .{ .short = "u1", .long = .{ .string = .user1 } },
    .{ .short = "u2", .long = .{ .string = .user2 } },
    .{ .short = "u3", .long = .{ .string = .user3 } },
    .{ .short = "u4", .long = .{ .string = .user4 } },
    .{ .short = "u5", .long = .{ .string = .user5 } },
    .{ .short = "u6", .long = .{ .string = .user6 } },
    .{ .short = "u7", .long = .{ .string = .user7 } },
    .{ .short = "u8", .long = .{ .string = .user8 } },
    .{ .short = "u9", .long = .{ .string = .user9 } },
    .{ .short = "wait", .long = .{ .string = .wait_tone } },
    .{ .short = "xoffc", .long = .{ .string = .xoff_character } },
    .{ .short = "xonc", .long = .{ .string = .xon_character } },
    .{ .short = "zerom", .long = .{ .string = .zero_motion } },
    .{ .short = "scesa", .long = .{ .string = .alt_scancode_esc } },
    .{ .short = "bicr", .long = .{ .string = .bit_image_carriage_return } },
    .{ .short = "binel", .long = .{ .string = .bit_image_newline } },
    .{ .short = "birep", .long = .{ .string = .bit_image_repeat } },
    .{ .short = "csnm", .long = .{ .string = .char_set_names } },
    .{ .short = "csin", .long = .{ .string = .code_set_init } },
    .{ .short = "colornm", .long = .{ .string = .color_names } },
    .{ .short = "defbi", .long = .{ .string = .define_bit_image_region } },
    .{ .short = "devt", .long = .{ .string = .device_type } },
    .{ .short = "dispc", .long = .{ .string = .display_pc_char } },
    .{ .short = "endbi", .long = .{ .string = .end_bit_image_region } },
    .{ .short = "smpch", .long = .{ .string = .enter_pc_charset_mode } },
    .{ .short = "smsc", .long = .{ .string = .enter_scancode_mode } },
    .{ .short = "rmpch", .long = .{ .string = .exit_pc_charset_mode } },
    .{ .short = "rmsc", .long = .{ .string = .exit_scancode_mode } },
    .{ .short = "getm", .long = .{ .string = .get_mouse } },
    .{ .short = "kmous", .long = .{ .string = .key_mouse } },
    .{ .short = "minfo", .long = .{ .string = .mouse_info } },
    .{ .short = "pctrm", .long = .{ .string = .pc_term_options } },
    .{ .short = "pfxl", .long = .{ .string = .pkey_plab } },
    .{ .short = "reqmp", .long = .{ .string = .req_mouse_pos } },
    .{ .short = "scesc", .long = .{ .string = .scancode_escape } },
    .{ .short = "s0ds", .long = .{ .string = .set0_des_seq } },
    .{ .short = "s1ds", .long = .{ .string = .set1_des_seq } },
    .{ .short = "s2ds", .long = .{ .string = .set2_des_seq } },
    .{ .short = "s3ds", .long = .{ .string = .set3_des_seq } },
    .{ .short = "setab", .long = .{ .string = .set_a_background } },
    .{ .short = "setaf", .long = .{ .string = .set_a_foreground } },
    .{ .short = "setcolor", .long = .{ .string = .set_color_band } },
    .{ .short = "smglr", .long = .{ .string = .set_lr_margin } },
    .{ .short = "slines", .long = .{ .string = .set_page_length } },
    .{ .short = "smgtb", .long = .{ .string = .set_tb_margin } },
    .{ .short = "ehhlm", .long = .{ .string = .enter_horizontal_hl_mode } },
    .{ .short = "elhlm", .long = .{ .string = .enter_left_hl_mode } },
    .{ .short = "elohlm", .long = .{ .string = .enter_low_hl_mode } },
    .{ .short = "erhlm", .long = .{ .string = .enter_right_hl_mode } },
    .{ .short = "ethlm", .long = .{ .string = .enter_top_hl_mode } },
    .{ .short = "evhlm", .long = .{ .string = .enter_vertical_hl_mode } },
    .{ .short = "sgr1", .long = .{ .string = .set_a_attributes } },
    .{ .short = "slength", .long = .{ .string = .set_pglen_inch } },
};

pub fn getCapsLookUpTable(allocator: *std.mem.Allocator) !std.StringHashMap(Terms) {
    var data = std.StringHashMap(Terms).init(allocator);
    for (dictionary) |term| 
        _ = try data.put(term.short, term.long);
    return data;
}

pub const Terminfo = struct {
    names: std.StringHashMap(bool),
    caps: std.StringHashMap([]const u8),
    buffer: std.ArrayList(u8),

    pub fn init(allocator: *std.mem.Allocator, terminfo_path: []const u8, cap_delimiter: []const u8) !Terminfo {
        var names = std.StringHashMap(bool).init(allocator);
        var caps = std.StringHashMap([]const u8).init(allocator);

        var read_line = try std.fs.ReadLineIterator.init(terminfo_path);
        defer read_line.deinit();
        read_line.setFilter(struct {
            fn filter(line: []u8) bool {
                return !(std.mem.startsWith(u8, line, "#") or line.len == 0);
            }
        }.filter);
        read_line.setMap(struct {
            fn map(line: []u8) []const u8 {
                return std.mem.trim(u8, line[0..], " \r\t");
            }
        }.map);

        var buffer = try read_line.collect(allocator);
        var tokens = std.mem.tokenize(buffer.toSlice(), cap_delimiter);

        while (tokens.next()) |token| {
            const trimmed = std.mem.trimLeft(u8, token, " ");

            if (std.mem.indexOf(u8, trimmed, "|") != null) {
                var name_tokens = std.mem.tokenize(trimmed, "|");
                while (name_tokens.next()) |name|
                    _ = try names.put(name, true);
            } else if (std.mem.indexOf(u8, trimmed, "=")) |equals| {
                _ = try caps.put(trimmed[0..equals], trimmed[equals+1..]);
            } else if (std.mem.indexOf(u8, trimmed, "#")) |pound| {
                _ = try caps.put(trimmed[0..pound], trimmed[pound+1..]);
            } else {
                _ = try caps.put(trimmed, "true");
            }
        }

        return Terminfo {
            .names = names,
            .caps = caps,
            .buffer = buffer,
        };
    }

    pub fn deinit(self: Terminfo) void {
        self.names.deinit();
        self.caps.deinit();
        self.buffer.deinit();
    }
};

test "terminfo-test" {
    // Terminfo is specific to Unix-like platforms.
    // So this test will be skipped on Windows platforms.
    if (builtin.os == .windows) return error.SkipZigTest;

    var terminfo: Terminfo = undefined;
    defer terminfo.deinit();
    var buffer: [1024 * 1024]u8 = undefined;
    var allocator = &std.heap.FixedBufferAllocator.init(buffer[0..]).allocator;

    if (builtin.os == .freebsd) {
        terminfo = try Terminfo.init(allocator, "/usr/share/misc/termcap", ":");
    } else {
        terminfo = try Terminfo.init(allocator, "/etc/terminfo.src", ",");
    }
    const caps_lookup = try getCapsLookUpTable(allocator);
}
